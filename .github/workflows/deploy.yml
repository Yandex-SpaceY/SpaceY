name: Deploy

on:
  push:
    branches:
      - test-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Setup key
      # - run: set -eu
      # - run: mkdir "$HOME/.ssh"
      # - run: echo "${{ secrets.key }}" > "$HOME/.ssh/key"
      # - run: chmod 600 "$HOME/.ssh/key"
      # Build
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      - run: npm ci
      - run: POSTGRES_DB=$POSTGRES_DB POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_PORT=$POSTGRES_PORT POSTGRES_USER=$POSTGRES_USER POSTGRES_URL=$POSTGRES_URL  docker-compose build
      - run: docker images
      # Deploy
      # run: |
      #   docker tag space-y-server "cr.yandex/$REGISTRY_ID/space-y-server:latest"
      #   docker tag postgres "cr.yandex/$REGISTRY_ID/postgres:latest"
      #   docker push "cr.yandex/$REGISTRY_ID/space-y-server:latest"
      #   docker push "cr.yandex/$REGISTRY_ID/postgres:latest"